[package]
name = "opaque-pointer"
version = "0.7.1"
description = "Generic functions to work with opaque pointers when use FFI to expose Rust structs"
authors = ["Jesus Hernandez <jesushdez@protonmail.com>"]
license = "Unlicense"
keywords = ["pointer", "opaque", "pointers", "cbindgen", "ffi"]
categories = ["development-tools::ffi", "no-std"]
edition = "2018"
readme = "README.md"
repository = "https://github.com/jhg/opaque-pointer-rs/"
exclude = [".github/**", ".vscode/**"]

[features]
default = ["std"]
std = []
# If you does not use std then you need alloc feature
alloc = []
# Allow to use some FFI for C types
c-types = ["std"]
# Check pointers before to use it to panic if it is null
panic-if-null = []

[dependencies]
log = "^0"

[package.metadata.docs.rs]
features = ["std", "c-types"]

# TODO: find a better solution:
# Work around for test with features like c-types to detect compile errors
# like the one introduced with the commit 3a1d15f33e8e418ef6bee2b7b9e096780bd2c8ac
# removing needed lifetime but tests and compilation without c-types did not fail,
# see issue reply https://github.com/rust-lang/cargo/issues/2911#issuecomment-749580481
# for more information
[dev-dependencies]
opaque-pointer = { path = ".", features = ["c-types"] }
